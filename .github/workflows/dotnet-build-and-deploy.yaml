name: '.NET Build and Deploy'

on:
  workflow_call:
    inputs:
      job_name:
        type: string
        required: true
      environment:
        type: string
        required: true
      api_name:
        type: string
        required: true
      api_app_name:
        type: string
        required: true
      api_app_path:
        type: string
        required: true
      resource_name:
        type: string
        required: true
      location_code:
        type: string
        required: true
    secrets:
      azure_credentials:
        required: true

jobs:
  build_test_analyse_deploy:
    name: ${{ inputs.job_name }}

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "RESOURCE_GROUP_NAME=rg-${{ inputs.resource_name }}-${{ inputs.environment }}-${{ inputs.location_code }}" >> $GITHUB_ENV
        echo "FUNCTIONAPP_NAME=fncapp-${{ inputs.resource_name }}-${{ inputs.api_name }}-${{ inputs.environment }}-${{ inputs.location_code }}" >> $GITHUB_ENV
        echo "FUNCTIONAPP_PATH=${{ github.workspace }}/${{ inputs.api_name }}/src/${{ inputs.api_app_name }}" >> $GITHUB_ENV

    # - name: Check environment variables
    #   shell: bash
    #   run: |
    #     echo $RESOURCE_GROUP_NAME
    #     echo $FUNCTIONAPP_NAME
    #     echo $FUNCTIONAPP_PATH

    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.azure_credentials }}

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x'

    - name: Initialise CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: 'csharp'

    - name: Restore NuGet packages
      shell: bash
      run: |
        cd "${{ inputs.api_app_path }}"
        dotnet restore .

    - name: Build solution
      shell: bash
      run: |
        cd "${{ inputs.api_app_path }}"
        dotnet build . -c Release

    - name: Test solution
      shell: bash
      run: |
        cd "${{ inputs.api_app_path }}"
        dotnet test . -c Release

    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v1

    - name: Get CodeQL analysis report
      shell: pwsh
      run: |
        Write-Output "Result: $env:RUNNER_TEMP/codeql_databases/csharp.zip"

    - name: Create FunctionApp artifact
      shell: bash
      run: |
        cd "${{ inputs.api_app_path }}"
        dotnet publish ${{ env.FUNCTIONAPP_PATH }} -c Release -o published

    - name: Get FunctionApp publish profile
      id: publishprofile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
      with:
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        appName: ${{ env.FUNCTIONAPP_NAME }}

    - name: Deploy FunctionApp
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.FUNCTIONAPP_NAME }}
        package: ${{ inputs.api_name }}/published
        publish-profile: ${{ steps.publishprofile.outputs.profile }}

    - name: Reset FunctionApp publish profile
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
      with:
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        appName: ${{ env.FUNCTIONAPP_NAME }}
        reset: true